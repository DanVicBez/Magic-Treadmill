<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yScore = -200;
dyScore = 0;
yHighScore = 300;
dyHighScore = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw things to the GUI

draw_set_colour(c_black);

// Score
if room == rm_game {
    draw_set_font(fnt_silkscreen_24);
    var text = 'Score: ' + string(score);
    
    if obj_control.gameOver {
        if yScore &lt; 300 {
            dyScore += 0.5;
        } else {
//            yScore = 300;
            dyScore = 0;
        }
        yScore += dyScore;
    
        draw_set_halign(fa_center);
        draw_text(room_width / 2, yScore, text);
    } else {
        draw_text(room_width - string_width(text) / 2 - 20, 30, text);
    }
}

// Highscore
if room == rm_main_menu {
    // Make the text fly up
    if obj_start.clicked {
        dyHighScore -= 0.8;
        yHighScore += dyHighScore;
    }
    draw_set_font(fnt_silkscreen_24);
    draw_set_halign(fa_center);
    draw_text(room_width / 2, yHighScore, 'Highscore: ' + string(global.highScore));
} else if room == rm_game &amp;&amp; obj_control.gameOver {
    draw_text(room_width / 2, yScore + 40, 'Highscore: ' + string(global.highScore));
}

// Pause menu
if obj_control.paused {
    draw_set_alpha(0.5);
    draw_rectangle_colour(0, 0, room_width, room_height, c_black, c_black, c_black, c_black, false);
    draw_set_alpha(1); 
    
    draw_set_font(fnt_silkscreen_48);
    draw_set_colour(c_white);
    draw_text(room_width / 2, 200, 'PAUSED');      
}

if room == rm_tutorial_1 { // Tutorial 1
    draw_set_font(fnt_silkscreen_48);
    draw_text(room_width / 2, 100, 'This is you.');
    
    draw_set_font(fnt_silkscreen_24);
    draw_text(room_width / 2, 600, 'Your immense coding skill has found its way into your#treadmill, which has now become capable of flight.');
    
    draw_set_font(fnt_silkscreen_20);
    draw_text(room_width / 2, room_height - 50, 'Press Enter to continue');
} else if room == rm_tutorial_2 { // Tutorial 2
    draw_set_font(fnt_silkscreen_48);
    draw_text(room_width / 2, 100, 'THESE ARE CHAIRS.');

    draw_set_font(fnt_silkscreen_24);
    draw_text(room_width / 2, 600, 'Avoid them at all costs.');
    
    draw_set_font(fnt_silkscreen_20);
    draw_text(room_width / 2, room_height - 50, 'Press Enter to continue');
} else if room == rm_tutorial_3 { //Tutorial 3
    draw_set_font(fnt_silkscreen_48);    
    draw_text(room_width / 2, 100, 'CONTROLS');
    
    draw_set_font(fnt_silkscreen_24);
    draw_text(room_width / 2, 500, 'Mouse: move the player' +
    '#P: pause the game' + 
    '#M: mute all sounds (not music)' + 
    '#X: close the game');
    
    draw_set_font(fnt_silkscreen_20);    
    draw_text(room_width / 2, room_height - 50, 'Press Enter to continue');
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
